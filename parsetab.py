
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND ARRAY ARROW BREAK CASE CATCH CLASS COMMA COMMENT CONST CONSTRUCT CONTINUE DEFAULT DIVIDE DO DOLLAR ELSE ELSEIF EQ ERROR EXP EXTENDS FINALLY FLOAT FOR FOREACH FUNCTION GE GT IDENTICAL IDENTIFIER IF IMPLEMENTS INTEGER LBRACE LBRACKET LE LPAREN LT MINUS MOD NE NEW NEWLINE NOT NOT_IDENTICAL OR PLUS PRIVATE PROTECTED PUBLIC RBRACE RBRACKET RETURN RPAREN SEMI SET STATIC STRING SWITCH THROW TIMES TRY VAR VARIABLE WHILEprogram : statement_liststatement_list : statement\n                      | statement_list statementstatement : print_statement\n                 | input_statement\n                 | expression_statement\n                 | assignment_statement\n                 | condition_statement\n                 | data_structure_statement\n                 | function_statement\n                 | class_statementprint_statement : IDENTIFIER LPAREN argument_list RPAREN SEMIinput_statement : IDENTIFIER LPAREN RPAREN SEMIargument_list : expression\n                     | argument_list COMMA expressionexpression_statement : expression SEMIassignment_statement : VARIABLE EQ expression SEMIcondition_statement : IF LPAREN condition RPAREN statement\n                           | IF LPAREN condition RPAREN statement ELSE statementdata_structure_statement : array_statement\n                                | class_statementarray_statement : VARIABLE EQ LBRACKET argument_list RBRACKET SEMIclass_statement : CLASS IDENTIFIER LBRACE class_body RBRACEclass_body : class_body_element\n                  | class_body class_body_elementclass_body_element : assignment_statement\n                          | function_statementfunction_statement : FUNCTION IDENTIFIER LPAREN parameter_list RPAREN LBRACE statement_list RBRACEparameter_list : VARIABLE\n                      | parameter_list COMMA VARIABLE\n                      | emptycondition : expression comparison_operator expression\n                 | condition logical_operator conditioncomparison_operator : EQ\n                           | NE\n                           | LT\n                           | LE\n                           | GT\n                           | GElogical_operator : AND\n                        | OR\n                        | NOTexpression : term\n                  | expression PLUS term\n                  | expression MINUS term\n                  | expression TIMES term\n                  | expression DIVIDE term\n                  | expression MOD term\n                  | expression EXP termterm : INTEGER\n            | FLOAT\n            | STRING\n            | VARIABLE\n            | LPAREN expression RPARENempty :'
    
_lr_action_items = {'IDENTIFIER':([0,2,3,4,5,6,7,8,9,10,11,17,18,19,24,28,57,58,60,80,83,88,91,92,93,95,96,97,],[12,12,-2,-4,-5,-6,-7,-8,-9,-10,-11,-20,37,38,-3,-16,-13,-17,12,-12,-18,-23,-22,12,12,-19,12,-28,]),'VARIABLE':([0,2,3,4,5,6,7,8,9,10,11,13,17,24,25,28,29,30,31,32,33,34,35,36,50,53,54,56,57,58,60,61,62,63,64,65,66,67,68,69,70,71,75,76,77,78,80,83,87,88,89,90,91,92,93,95,96,97,],[15,15,-2,-4,-5,-6,-7,-8,-9,-10,-11,27,-20,-3,27,-16,27,27,27,27,27,27,27,27,27,73,79,27,-13,-17,15,27,-40,-41,-42,27,-34,-35,-36,-37,-38,-39,79,-24,-26,-27,-12,-18,94,-23,-25,27,-22,15,15,-19,15,-28,]),'IF':([0,2,3,4,5,6,7,8,9,10,11,17,24,28,57,58,60,80,83,88,91,92,93,95,96,97,],[16,16,-2,-4,-5,-6,-7,-8,-9,-10,-11,-20,-3,-16,-13,-17,16,-12,-18,-23,-22,16,16,-19,16,-28,]),'FUNCTION':([0,2,3,4,5,6,7,8,9,10,11,17,24,28,54,57,58,60,75,76,77,78,80,83,88,89,91,92,93,95,96,97,],[18,18,-2,-4,-5,-6,-7,-8,-9,-10,-11,-20,-3,-16,18,-13,-17,18,18,-24,-26,-27,-12,-18,-23,-25,-22,18,18,-19,18,-28,]),'CLASS':([0,2,3,4,5,6,7,8,9,10,11,17,24,28,57,58,60,80,83,88,91,92,93,95,96,97,],[19,19,-2,-4,-5,-6,-7,-8,-9,-10,-11,-20,-3,-16,-13,-17,19,-12,-18,-23,-22,19,19,-19,19,-28,]),'INTEGER':([0,2,3,4,5,6,7,8,9,10,11,13,17,24,25,28,29,30,31,32,33,34,35,36,50,56,57,58,60,61,62,63,64,65,66,67,68,69,70,71,80,83,88,90,91,92,93,95,96,97,],[21,21,-2,-4,-5,-6,-7,-8,-9,-10,-11,21,-20,-3,21,-16,21,21,21,21,21,21,21,21,21,21,-13,-17,21,21,-40,-41,-42,21,-34,-35,-36,-37,-38,-39,-12,-18,-23,21,-22,21,21,-19,21,-28,]),'FLOAT':([0,2,3,4,5,6,7,8,9,10,11,13,17,24,25,28,29,30,31,32,33,34,35,36,50,56,57,58,60,61,62,63,64,65,66,67,68,69,70,71,80,83,88,90,91,92,93,95,96,97,],[22,22,-2,-4,-5,-6,-7,-8,-9,-10,-11,22,-20,-3,22,-16,22,22,22,22,22,22,22,22,22,22,-13,-17,22,22,-40,-41,-42,22,-34,-35,-36,-37,-38,-39,-12,-18,-23,22,-22,22,22,-19,22,-28,]),'STRING':([0,2,3,4,5,6,7,8,9,10,11,13,17,24,25,28,29,30,31,32,33,34,35,36,50,56,57,58,60,61,62,63,64,65,66,67,68,69,70,71,80,83,88,90,91,92,93,95,96,97,],[23,23,-2,-4,-5,-6,-7,-8,-9,-10,-11,23,-20,-3,23,-16,23,23,23,23,23,23,23,23,23,23,-13,-17,23,23,-40,-41,-42,23,-34,-35,-36,-37,-38,-39,-12,-18,-23,23,-22,23,23,-19,23,-28,]),'LPAREN':([0,2,3,4,5,6,7,8,9,10,11,12,13,16,17,24,25,28,29,30,31,32,33,34,35,36,37,50,56,57,58,60,61,62,63,64,65,66,67,68,69,70,71,80,83,88,90,91,92,93,95,96,97,],[13,13,-2,-4,-5,-6,-7,-8,-9,-10,-11,25,13,36,-20,-3,13,-16,13,13,13,13,13,13,13,13,53,13,13,-13,-17,13,13,-40,-41,-42,13,-34,-35,-36,-37,-38,-39,-12,-18,-23,13,-22,13,13,-19,13,-28,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,17,24,28,57,58,80,83,88,91,95,97,],[0,-1,-2,-4,-5,-6,-7,-8,-9,-10,-11,-20,-3,-16,-13,-17,-12,-18,-23,-22,-19,-28,]),'RBRACE':([3,4,5,6,7,8,9,10,11,17,24,28,57,58,75,76,77,78,80,83,88,89,91,95,96,97,],[-2,-4,-5,-6,-7,-8,-9,-10,-11,-20,-3,-16,-13,-17,88,-24,-26,-27,-12,-18,-23,-25,-22,-19,97,-28,]),'ELSE':([4,5,6,7,8,9,10,11,17,28,57,58,80,83,88,91,95,97,],[-4,-5,-6,-7,-8,-9,-10,-11,-20,-16,-13,-17,-12,92,-23,-22,-19,-28,]),'SEMI':([14,15,20,21,22,23,27,40,42,43,44,45,46,47,48,49,55,82,],[28,-53,-43,-50,-51,-52,-53,57,-54,-44,-45,-46,-47,-48,-49,58,80,91,]),'PLUS':([14,15,20,21,22,23,26,27,41,42,43,44,45,46,47,48,49,52,81,85,],[29,-53,-43,-50,-51,-52,29,-53,29,-54,-44,-45,-46,-47,-48,-49,29,29,29,29,]),'MINUS':([14,15,20,21,22,23,26,27,41,42,43,44,45,46,47,48,49,52,81,85,],[30,-53,-43,-50,-51,-52,30,-53,30,-54,-44,-45,-46,-47,-48,-49,30,30,30,30,]),'TIMES':([14,15,20,21,22,23,26,27,41,42,43,44,45,46,47,48,49,52,81,85,],[31,-53,-43,-50,-51,-52,31,-53,31,-54,-44,-45,-46,-47,-48,-49,31,31,31,31,]),'DIVIDE':([14,15,20,21,22,23,26,27,41,42,43,44,45,46,47,48,49,52,81,85,],[32,-53,-43,-50,-51,-52,32,-53,32,-54,-44,-45,-46,-47,-48,-49,32,32,32,32,]),'MOD':([14,15,20,21,22,23,26,27,41,42,43,44,45,46,47,48,49,52,81,85,],[33,-53,-43,-50,-51,-52,33,-53,33,-54,-44,-45,-46,-47,-48,-49,33,33,33,33,]),'EXP':([14,15,20,21,22,23,26,27,41,42,43,44,45,46,47,48,49,52,81,85,],[34,-53,-43,-50,-51,-52,34,-53,34,-54,-44,-45,-46,-47,-48,-49,34,34,34,34,]),'EQ':([15,20,21,22,23,27,42,43,44,45,46,47,48,52,79,],[35,-43,-50,-51,-52,-53,-54,-44,-45,-46,-47,-48,-49,66,90,]),'RPAREN':([20,21,22,23,25,26,27,39,41,42,43,44,45,46,47,48,51,53,72,73,74,81,84,85,94,],[-43,-50,-51,-52,40,42,-53,55,-14,-54,-44,-45,-46,-47,-48,-49,60,-55,86,-29,-31,-15,-33,-32,-30,]),'COMMA':([20,21,22,23,27,39,41,42,43,44,45,46,47,48,53,59,72,73,74,81,94,],[-43,-50,-51,-52,-53,56,-14,-54,-44,-45,-46,-47,-48,-49,-55,56,87,-29,-31,-15,-30,]),'NE':([20,21,22,23,27,42,43,44,45,46,47,48,52,],[-43,-50,-51,-52,-53,-54,-44,-45,-46,-47,-48,-49,67,]),'LT':([20,21,22,23,27,42,43,44,45,46,47,48,52,],[-43,-50,-51,-52,-53,-54,-44,-45,-46,-47,-48,-49,68,]),'LE':([20,21,22,23,27,42,43,44,45,46,47,48,52,],[-43,-50,-51,-52,-53,-54,-44,-45,-46,-47,-48,-49,69,]),'GT':([20,21,22,23,27,42,43,44,45,46,47,48,52,],[-43,-50,-51,-52,-53,-54,-44,-45,-46,-47,-48,-49,70,]),'GE':([20,21,22,23,27,42,43,44,45,46,47,48,52,],[-43,-50,-51,-52,-53,-54,-44,-45,-46,-47,-48,-49,71,]),'RBRACKET':([20,21,22,23,27,41,42,43,44,45,46,47,48,59,81,],[-43,-50,-51,-52,-53,-14,-54,-44,-45,-46,-47,-48,-49,82,-15,]),'AND':([20,21,22,23,27,42,43,44,45,46,47,48,51,84,85,],[-43,-50,-51,-52,-53,-54,-44,-45,-46,-47,-48,-49,62,62,-32,]),'OR':([20,21,22,23,27,42,43,44,45,46,47,48,51,84,85,],[-43,-50,-51,-52,-53,-54,-44,-45,-46,-47,-48,-49,63,63,-32,]),'NOT':([20,21,22,23,27,42,43,44,45,46,47,48,51,84,85,],[-43,-50,-51,-52,-53,-54,-44,-45,-46,-47,-48,-49,64,64,-32,]),'LBRACKET':([35,],[50,]),'LBRACE':([38,86,],[54,93,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'statement_list':([0,93,],[2,96,]),'statement':([0,2,60,92,93,96,],[3,24,83,95,3,24,]),'print_statement':([0,2,60,92,93,96,],[4,4,4,4,4,4,]),'input_statement':([0,2,60,92,93,96,],[5,5,5,5,5,5,]),'expression_statement':([0,2,60,92,93,96,],[6,6,6,6,6,6,]),'assignment_statement':([0,2,54,60,75,92,93,96,],[7,7,77,7,77,7,7,7,]),'condition_statement':([0,2,60,92,93,96,],[8,8,8,8,8,8,]),'data_structure_statement':([0,2,60,92,93,96,],[9,9,9,9,9,9,]),'function_statement':([0,2,54,60,75,92,93,96,],[10,10,78,10,78,10,10,10,]),'class_statement':([0,2,60,92,93,96,],[11,11,11,11,11,11,]),'expression':([0,2,13,25,35,36,50,56,60,61,65,90,92,93,96,],[14,14,26,41,49,52,41,81,14,52,85,49,14,14,14,]),'array_statement':([0,2,60,92,93,96,],[17,17,17,17,17,17,]),'term':([0,2,13,25,29,30,31,32,33,34,35,36,50,56,60,61,65,90,92,93,96,],[20,20,20,20,43,44,45,46,47,48,20,20,20,20,20,20,20,20,20,20,20,]),'argument_list':([25,50,],[39,59,]),'condition':([36,61,],[51,84,]),'logical_operator':([51,84,],[61,61,]),'comparison_operator':([52,],[65,]),'parameter_list':([53,],[72,]),'empty':([53,],[74,]),'class_body':([54,],[75,]),'class_body_element':([54,75,],[76,89,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',10),
  ('statement_list -> statement','statement_list',1,'p_statement_list','parser.py',14),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','parser.py',15),
  ('statement -> print_statement','statement',1,'p_statement','parser.py',22),
  ('statement -> input_statement','statement',1,'p_statement','parser.py',23),
  ('statement -> expression_statement','statement',1,'p_statement','parser.py',24),
  ('statement -> assignment_statement','statement',1,'p_statement','parser.py',25),
  ('statement -> condition_statement','statement',1,'p_statement','parser.py',26),
  ('statement -> data_structure_statement','statement',1,'p_statement','parser.py',27),
  ('statement -> function_statement','statement',1,'p_statement','parser.py',28),
  ('statement -> class_statement','statement',1,'p_statement','parser.py',29),
  ('print_statement -> IDENTIFIER LPAREN argument_list RPAREN SEMI','print_statement',5,'p_print_statement','parser.py',33),
  ('input_statement -> IDENTIFIER LPAREN RPAREN SEMI','input_statement',4,'p_input_statement','parser.py',37),
  ('argument_list -> expression','argument_list',1,'p_argument_list','parser.py',41),
  ('argument_list -> argument_list COMMA expression','argument_list',3,'p_argument_list','parser.py',42),
  ('expression_statement -> expression SEMI','expression_statement',2,'p_expression_statement','parser.py',49),
  ('assignment_statement -> VARIABLE EQ expression SEMI','assignment_statement',4,'p_assignment_statement','parser.py',53),
  ('condition_statement -> IF LPAREN condition RPAREN statement','condition_statement',5,'p_condition_statement','parser.py',57),
  ('condition_statement -> IF LPAREN condition RPAREN statement ELSE statement','condition_statement',7,'p_condition_statement','parser.py',58),
  ('data_structure_statement -> array_statement','data_structure_statement',1,'p_data_structure_statement','parser.py',65),
  ('data_structure_statement -> class_statement','data_structure_statement',1,'p_data_structure_statement','parser.py',66),
  ('array_statement -> VARIABLE EQ LBRACKET argument_list RBRACKET SEMI','array_statement',6,'p_array_statement','parser.py',70),
  ('class_statement -> CLASS IDENTIFIER LBRACE class_body RBRACE','class_statement',5,'p_class_statement','parser.py',74),
  ('class_body -> class_body_element','class_body',1,'p_class_body','parser.py',78),
  ('class_body -> class_body class_body_element','class_body',2,'p_class_body','parser.py',79),
  ('class_body_element -> assignment_statement','class_body_element',1,'p_class_body_element','parser.py',86),
  ('class_body_element -> function_statement','class_body_element',1,'p_class_body_element','parser.py',87),
  ('function_statement -> FUNCTION IDENTIFIER LPAREN parameter_list RPAREN LBRACE statement_list RBRACE','function_statement',8,'p_function_statement','parser.py',91),
  ('parameter_list -> VARIABLE','parameter_list',1,'p_parameter_list','parser.py',95),
  ('parameter_list -> parameter_list COMMA VARIABLE','parameter_list',3,'p_parameter_list','parser.py',96),
  ('parameter_list -> empty','parameter_list',1,'p_parameter_list','parser.py',97),
  ('condition -> expression comparison_operator expression','condition',3,'p_condition','parser.py',104),
  ('condition -> condition logical_operator condition','condition',3,'p_condition','parser.py',105),
  ('comparison_operator -> EQ','comparison_operator',1,'p_comparison_operator','parser.py',112),
  ('comparison_operator -> NE','comparison_operator',1,'p_comparison_operator','parser.py',113),
  ('comparison_operator -> LT','comparison_operator',1,'p_comparison_operator','parser.py',114),
  ('comparison_operator -> LE','comparison_operator',1,'p_comparison_operator','parser.py',115),
  ('comparison_operator -> GT','comparison_operator',1,'p_comparison_operator','parser.py',116),
  ('comparison_operator -> GE','comparison_operator',1,'p_comparison_operator','parser.py',117),
  ('logical_operator -> AND','logical_operator',1,'p_logical_operator','parser.py',121),
  ('logical_operator -> OR','logical_operator',1,'p_logical_operator','parser.py',122),
  ('logical_operator -> NOT','logical_operator',1,'p_logical_operator','parser.py',123),
  ('expression -> term','expression',1,'p_expression','parser.py',127),
  ('expression -> expression PLUS term','expression',3,'p_expression','parser.py',128),
  ('expression -> expression MINUS term','expression',3,'p_expression','parser.py',129),
  ('expression -> expression TIMES term','expression',3,'p_expression','parser.py',130),
  ('expression -> expression DIVIDE term','expression',3,'p_expression','parser.py',131),
  ('expression -> expression MOD term','expression',3,'p_expression','parser.py',132),
  ('expression -> expression EXP term','expression',3,'p_expression','parser.py',133),
  ('term -> INTEGER','term',1,'p_term','parser.py',140),
  ('term -> FLOAT','term',1,'p_term','parser.py',141),
  ('term -> STRING','term',1,'p_term','parser.py',142),
  ('term -> VARIABLE','term',1,'p_term','parser.py',143),
  ('term -> LPAREN expression RPAREN','term',3,'p_term','parser.py',144),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',151),
]

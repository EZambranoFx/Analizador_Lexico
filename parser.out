Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    BREAK
    CASE
    CATCH
    COMMENT
    CONST
    CONSTRUCT
    CONTINUE
    DEFAULT
    DO
    DOLLAR
    ECHO
    ERROR
    EXP
    EXTENDS
    FINALLY
    FOR
    FOREACH
    IDENTICAL
    IMPLEMENTS
    MOD
    NEWLINE
    NOT
    NOT_IDENTICAL
    PRIVATE
    PROTECTED
    PUBLIC
    RETURN
    SET
    STATIC
    SWITCH
    THROW
    TRY
    WHILE

Grammar

Rule 0     S' -> object_declaration
Rule 1     object_declaration -> VAR VARIABLE EQ NEW CLASS LPAREN RPAREN SEMI
Rule 2     program -> statement_list
Rule 3     print_statement -> IDENTIFIER LPAREN argument_list RPAREN SEMI
Rule 4     input_statement -> VARIABLE EQ READLINE LPAREN RPAREN SEMI
Rule 5     input_statement -> empty
Rule 6     array -> ARRAY LPAREN arrayArg RPAREN SEMI
Rule 7     arrayArg -> index ARROW value
Rule 8     arrayArg -> index ARROW value arrayArg
Rule 9     arrayArg -> index ARROW value COMMA arrayArg
Rule 10    index -> INTEGER
Rule 11    index -> STRING
Rule 12    ifStatement -> IF LPAREN condition RPAREN LBRACE statements RBRACE SEMI
Rule 13    ifStatement -> IF LPAREN condition RPAREN LBRACE statements RBRACE elseStatement
Rule 14    elseStatement -> ELSE LBRACE statements RBRACE SEMI
Rule 15    compOperator -> LT
Rule 16    compOperator -> GT
Rule 17    compOperator -> LE
Rule 18    compOperator -> GE
Rule 19    compOperator -> EQ
Rule 20    compOperator -> NE
Rule 21    value -> VARIABLE
Rule 22    value -> INTEGER
Rule 23    value -> FLOAT
Rule 24    value -> expression_statement
Rule 25    arrowFunction -> FUNCTION LPAREN VARIABLE RPAREN ARROW expression SEMI
Rule 26    arrowFunction -> FUNCTION LPAREN VARIABLE RPAREN ARROW arrowFunction
Rule 27    expression -> term
Rule 28    expression -> expression PLUS term
Rule 29    expression -> expression MINUS term
Rule 30    expression -> expression TIMES term
Rule 31    expression -> expression DIVIDE term
Rule 32    expression_list -> expression_list COMMA expression
Rule 33    expression_list -> expression
Rule 34    empty -> <empty>
Rule 35    statements -> statements statement
Rule 36    statements -> statement
Rule 37    statements -> empty
Rule 38    statement -> expression_statement
Rule 39    statement -> compound_statement
Rule 40    statement -> ifStatement
Rule 41    statement -> while_statement
Rule 42    statement -> elseif_statement
Rule 43    expression_statement -> expression SEMI
Rule 44    compound_statement -> LBRACE statements RBRACE
Rule 45    class_declaration -> CLASS IDENTIFIER LBRACE class_body RBRACE
Rule 46    class_member_list -> class_member_list class_member
Rule 47    class_member_list -> empty
Rule 48    condition_statement -> IF LPAREN condition RPAREN statement
Rule 49    condition_statement -> IF LPAREN condition RPAREN statement ELSE statement
Rule 50    data_structure_statement -> array_statement
Rule 51    data_structure_statement -> class_statement
Rule 52    array_statement -> VARIABLE EQ LBRACKET argument_list RBRACKET SEMI
Rule 53    class_statement -> CLASS IDENTIFIER LBRACE class_body RBRACE
Rule 54    class_body -> class_body_element
Rule 55    class_body -> class_body class_body_element
Rule 56    class_body_element -> assignment_statement
Rule 57    class_body_element -> function_statement
Rule 58    function_statement -> FUNCTION IDENTIFIER LPAREN parameter_list RPAREN LBRACE statement_list RBRACE
Rule 59    parameter_list -> parameter_list COMMA parameter
Rule 60    parameter_list -> empty
Rule 61    parameter -> TYPE VARIABLE
Rule 62    parameter -> VARIABLE
Rule 63    statement_list -> statement_list statement
Rule 64    statement_list -> statement
Rule 65    elseif_statement -> ELSEIF LPAREN expression RPAREN statement
Rule 66    anonymous_function -> FUNCTION LPAREN parameter_list RPAREN use_clause_opt LBRACE statement_list RBRACE
Rule 67    use_clause_opt -> USE LPAREN variable_list RPAREN
Rule 68    use_clause_opt -> empty
Rule 69    variable_list -> variable_list COMMA VARIABLE
Rule 70    variable_list -> VARIABLE
Rule 71    condition -> expression compOperator INTEGER
Rule 72    condition -> condition logical_operator condition
Rule 73    logical_operator -> AND
Rule 74    logical_operator -> OR
Rule 75    variable_declaration -> VARIABLE EQ expression SEMI
Rule 76    variable_declaration -> VARIABLE EQ condition SEMI
Rule 77    term -> INTEGER
Rule 78    term -> STRING
Rule 79    term -> VARIABLE
Rule 80    term -> LPAREN expression RPAREN
Rule 81    array_declaration -> VARIABLE EQ ARRAY LPAREN array_elements RPAREN SEMI
Rule 82    array_elements -> array_elements COMMA array_element
Rule 83    array_elements -> array_element
Rule 84    array_elements -> empty
Rule 85    array_element -> expression
Rule 86    array_element -> expression ARROW expression

Terminals, with rules where they appear

AND                  : 73
ARRAY                : 6 81
ARROW                : 7 8 9 25 26 86
BREAK                : 
CASE                 : 
CATCH                : 
CLASS                : 1 45 53
COMMA                : 9 32 59 69 82
COMMENT              : 
CONST                : 
CONSTRUCT            : 
CONTINUE             : 
DEFAULT              : 
DIVIDE               : 31
DO                   : 
DOLLAR               : 
ECHO                 : 
ELSE                 : 14 49
ELSEIF               : 65
EQ                   : 1 4 19 52 75 76 81
ERROR                : 
EXP                  : 
EXTENDS              : 
FINALLY              : 
FLOAT                : 23
FOR                  : 
FOREACH              : 
FUNCTION             : 25 26 58 66
GE                   : 18
GT                   : 16
IDENTICAL            : 
IDENTIFIER           : 3 45 53 58
IF                   : 12 13 48 49
IMPLEMENTS           : 
INTEGER              : 10 22 71 77
LBRACE               : 12 13 14 44 45 53 58 66
LBRACKET             : 52
LE                   : 17
LPAREN               : 1 3 4 6 12 13 25 26 48 49 58 65 66 67 80 81
LT                   : 15
MINUS                : 29
MOD                  : 
NE                   : 20
NEW                  : 1
NEWLINE              : 
NOT                  : 
NOT_IDENTICAL        : 
OR                   : 74
PLUS                 : 28
PRIVATE              : 
PROTECTED            : 
PUBLIC               : 
RBRACE               : 12 13 14 44 45 53 58 66
RBRACKET             : 52
READLINE             : 4
RETURN               : 
RPAREN               : 1 3 4 6 12 13 25 26 48 49 58 65 66 67 80 81
SEMI                 : 1 3 4 6 12 14 25 43 52 75 76 81
SET                  : 
STATIC               : 
STRING               : 11 78
SWITCH               : 
THROW                : 
TIMES                : 30
TRY                  : 
TYPE                 : 61
USE                  : 67
VAR                  : 1
VARIABLE             : 1 4 21 25 26 52 61 62 69 70 75 76 79 81
WHILE                : 
error                : 

Nonterminals, with rules where they appear

anonymous_function   : 
argument_list        : 3 52
array                : 
arrayArg             : 6 8 9
array_declaration    : 
array_element        : 82 83
array_elements       : 81 82
array_statement      : 50
arrowFunction        : 26
assignment_statement : 56
class_body           : 45 53 55
class_body_element   : 54 55
class_declaration    : 
class_member         : 46
class_member_list    : 46
class_statement      : 51
compOperator         : 71
compound_statement   : 39
condition            : 12 13 48 49 72 72 76
condition_statement  : 
data_structure_statement : 
elseStatement        : 13
elseif_statement     : 42
empty                : 5 37 47 60 68 84
expression           : 25 28 29 30 31 32 33 43 65 71 75 80 85 86 86
expression_list      : 32
expression_statement : 24 38
function_statement   : 57
ifStatement          : 40
index                : 7 8 9
input_statement      : 
logical_operator     : 72
object_declaration   : 0
parameter            : 59
parameter_list       : 58 59 66
print_statement      : 
program              : 
statement            : 35 36 48 49 49 63 64 65
statement_list       : 2 58 63 66
statements           : 12 13 14 35 44
term                 : 27 28 29 30 31
use_clause_opt       : 66
value                : 7 8 9
variable_declaration : 
variable_list        : 67 69
while_statement      : 41

